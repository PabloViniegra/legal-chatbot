
generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id //Clerk id
  email String @unique
  firstName String?
  lastName String?
  imageUrl String?
  hasCompletedTour Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conversations Conversation[]

  @@index([email])
}

model Conversation {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  title String @default("Nueva consulta")
  category String?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]

  @@index([userId])
  @@index([userId, updatedAt])
}

model Message {
  id String @id @default(cuid())
  conversationId String
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  role String // user, assistant or system
  content String @db.Text
  tokens Int?
  model String?

  createdAt DateTime @default(now())
  
  @@index([conversationId])
  @@index([conversationId, createdAt])
}

model QueryLog {
  id String @id @default(cuid())
  userId String
  query String @db.Text
  category String?
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([createdAt])
}